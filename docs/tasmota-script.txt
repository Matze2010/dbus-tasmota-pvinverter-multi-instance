;#ifndef USE_SCRIPT
;#define USE_SCRIPT
;#endif
;#ifndef USE_SML_M
;#define USE_SML_M
;#endif
;#ifdef USE_RULES
;#undef USE_RULES
;#endif

;#define USE_UFILESYS
;#define UFSYS_SIZE 8192
;#define MAX_METERS 3
;#define USE_SCRIPT_WEB_DISPLAY
;#define SML_REPLACE_VARS
;#define USE_SML_SCRIPT_CMD
;#define USE_SML_M
;#define USE_SCRIPT_JSON_EXPORT
;#define MAXVARS 100
;#define MAXSVARS 30
;#define SML_MAX_VARS 50

>D 48
seconds=15
str=""
hdr=""
r="2,010404"
hs4="{m}<span style='color:yellow;'>"
hs5="</span>"

invstatus1=""
invstatus2=""

t:timer1=-1
t:timer2=-1

lastupdate1=0
lastupdate2=0

summe=0
phase_l1=0
phase_l2=0
phase_l3=0

display=0
M:res=0 3

>B
=>sensor53 r

>S

lastupdate1=sml[25]
if timer1>0 {
;print Timer %timer1% %sml[9]%
if chg[lastupdate1]>0 {
;print Timer reset
timer1=seconds
}
if sml[9]==0 {
print Timer stopped
timer1=-1
}
} 

if timer1==0 {
print restart SML
timer1=seconds
=> sensor53 r
}

if timer1==-1 {
if sml[9]==1 {
 print Timer restarted
 timer1=seconds
}
}


if sml[9]==1 {
   invstatus1="<span style='color:green;'>On</span>"
} 
if sml[9]==0 {
  invstatus1="<span style='color:orange;'>Off</span>"
}
if sml[9]==3 {
  invstatus1="<span style='color:red;'>Fault</span>"
}

>F
summe=sml[10]+sml[11]+sml[12]
if summe>0 {
phase_l1 = sml[10]/summe*sml[2]
phase_l2 = sml[11]/summe*sml[2]
phase_l3 = sml[12]/summe*sml[2]
} else {
phase_l1 = 0
phase_l2 = 0
phase_l3 = 0
}

if display==0 {
res[1]=phase_l1
res[2]=phase_l2
res[3]=phase_l3
} else {
res[1]=sml[10]
res[2]=sml[11]
res[3]=sml[12]
}

>J
,"PV1a":{"status":%0sml[9]%,"mainWatt":%1sml[2]%,"L1_w":%1phase_l1%,"L2_w":%1phase_l2%,"L3_w":%1phase_l3%,"L1_v":%1sml[13]%,"L2_v":%1sml[14]%,"L3_v":%1sml[15]%,"L1_c":%1sml[16]%,"L2_c":%1sml[17]%,"L3_c":%1sml[18]%}

>M 2
+1,4,c,1,-165,Gas
1,1-0:1.8.0*255(@100,*,m³,val,18
+2,1,m,0,9600,PV1,3,5,01040023,01040005,01040009,01040035,0104005D,0104005F,01040000,01040028,0104002C,01040030,01040026,0104002A,0104002E,r0103002D0006
%r%UUuuUUuu@i0:10,*,W,mainWatt,1
%r%UUuuUUuu@i1:10,*,W,s1Watt,1
%r%UUuuUUuu@i2:10,*,W,s2Watt,1
%r%UUuuUUuu@i3:10,*,kW,todayWatt,1
%r%UUuu@i4:10,*,C,t_inv,1
%r%xxxxUUuu@i4:10,*,C,t_ipm,1
%r%UUuu@i5:10,*,C,t_boost,1
%r%UUuu@i6:1,*,,status,0
%r%UUuuUUuu@i7:10,*,W,L1_w,1
%r%UUuuUUuu@i8:10,*,W,L2_w,1
%r%UUuuUUuu@i9:10,*,W,L3_w,1
%r%UUuu@i10:10,*,V,L1_v,1
%r%UUuu@i11:10,*,V,L2_v,1
%r%UUuu@i12:10,*,V,L3_v,1
%r%xxxxUUuu@i10:10,*,A,L1_c,1
%r%xxxxUUuu@i11:10,*,A,L2_c,1
%r%xxxxUUuu@i12:10,*,A,L3_c,1
2,01030CUUuu@i13:1,*,,yy,0
2,01030CxxxxUUuu@i13:1,*,,MM,0
2,01030CxxxxxxxxUUuu@i13:1,*,,dd,0
2,01030CxxxxxxxxxxxxUUuu@i13:1,*,,hh,0
2,01030CxxxxxxxxxxxxxxxxUUuu@i13:1,*,,mm,0
2,01030CxxxxxxxxxxxxxxxxxxxxUUuu@i13:1,*,,ss,0
2,01030CUUuuUUuuUUuuUUuuUUuuUUuu@i13:1,*,,timestamp,0
#

; html header
#head(hdr)
if wm==0 {
	wcs {s}<hr>{m}<hr>{e}
	str="{s}<span style='color:magenta;'>"
	wcs %str%
	str=hdr+"</span>{e}"
	wcs %str%
}

>W
%=#head("Gas")
Zählerstand %hs4% %2sml[1]% m³ %hs5%
<br/>
%=#head("Growatt MOD 15KTL3-X")
Status %invstatus1%
<br/>
Power (aktuell) %hs4% %1sml[2]% W %hs5%
Power (heute) %hs4% %1sml[5]% kW %hs5%
Strings %hs4% %1sml[3]% W / %1sml[4]% W %hs5%
<br/>
Phase L1 %hs4% %0res[1]% W / %1sml[13]% V / %1sml[16]% A%hs5%
Phase L2 %hs4% %0res[2]% W / %1sml[14]% V / %1sml[17]% A%hs5%
Phase L3 %hs4% %0res[3]% W / %1sml[15]% V / %1sml[18]% A%hs5%
<br/>
Temp %hs4% %1sml[6]% C / %1sml[7]% C / %1sml[8]% C%hs5%

bu(display "Phasenwerte - tech" "Phasenwerte - real")
